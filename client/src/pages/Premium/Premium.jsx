// client/src/pages/Premium/Premium.jsx
import React, { useState, useEffect } from 'react';
import { useAuthStore } from '@store/authStore';
import { useUserStore } from '@store/userStore';
import { getSubscriptionPlans, createSubscription, getSubscriptionStatus } from '@services/api';
import { USER_LIMITS, FEATURE_ACCESS, ERROR_MESSAGES, SUCCESS_MESSAGES } from '@utils/constants';
import Button from '@components/common/Button';
import Loading from '@components/common/Loading';
import Modal from '@components/common/Modal';
import PaymentModal from '@components/payments/PaymentModal';
import './Premium.css';

const Premium = () => {
  const { user, isAuthenticated } = useAuthStore();
  const { subscription, setSubscription } = useUserStore();
  const [plans, setPlans] = useState([]);
  const [loading, setLoading] = useState(true);
  const [selectedPlan, setSelectedPlan] = useState(null);
  const [paymentModalOpen, setPaymentModalOpen] = useState(false);
  const [featuresModalOpen, setFeaturesModalOpen] = useState(false);
  const [notifications, setNotifications] = useState([]);

  useEffect(() => {
    loadData();
  }, []);

  const loadData = async () => {
    try {
      setLoading(true);
      const [plansData, subscriptionData] = await Promise.all([
        getSubscriptionPlans(),
        isAuthenticated ? getSubscriptionStatus() : Promise.resolve(null)
      ]);
      setPlans(plansData);
      if (subscriptionData) {
        setSubscription(subscriptionData);
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      addNotification(ERROR_MESSAGES.NETWORK_ERROR, 'error');
    } finally {
      setLoading(false);
    }
  };

  const handleUpgrade = (plan) => {
    if (!isAuthenticated) {
      addNotification('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏', 'warning');
      return;
    }
    setSelectedPlan(plan);
    setPaymentModalOpen(true);
  };

  const handlePaymentSuccess = async (paymentData) => {
    try {
      const newSubscription = await createSubscription({
        planId: selectedPlan.id,
        paymentData
      });
      setSubscription(newSubscription);
      addNotification(SUCCESS_MESSAGES.PAYMENT_SUCCESS, 'success');
      setPaymentModalOpen(false);
      setSelectedPlan(null);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏:', error);
      addNotification(ERROR_MESSAGES.PAYMENT_ERROR, 'error');
    }
  };

  const addNotification = (message, type) => {
    const notification = {
      id: Date.now(),
      message,
      type,
      timestamp: new Date()
    };
    setNotifications(prev => [notification, ...prev.slice(0, 4)]);
    
    setTimeout(() => {
      setNotifications(prev => prev.filter(n => n.id !== notification.id));
    }, 5000);
  };

  const features = [
    {
      title: '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è',
      description: '–ü–æ–ª—É—á–∞–π—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–∞–¥–∞–Ω–∏–π –∫–∞–∂–¥—ã–π –¥–µ–Ω—å',
      icon: 'üîÆ',
      free: USER_LIMITS.FREE.DAILY_READINGS,
      premium: '–ë–µ–∑–ª–∏–º–∏—Ç'
    },
    {
      title: 'AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏',
      description: '–ì–ª—É–±–æ–∫–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ç–æ–ª–∫–æ–≤–∞–Ω–∏—è —Å –ø–æ–º–æ—â—å—é –ò–ò',
      icon: 'ü§ñ',
      free: USER_LIMITS.FREE.AI_INTERPRETATIONS,
      premium: '–ë–µ–∑–ª–∏–º–∏—Ç'
    },
    {
      title: '–ì–æ–ª–æ—Å–æ–≤—ã–µ –≥–∞–¥–∞–Ω–∏—è',
      description: '–ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –≥–æ–ª–æ—Å–æ–º –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –æ—Ç–≤–µ—Ç—ã',
      icon: 'üé§',
      free: `${USER_LIMITS.FREE.VOICE_MINUTES} –º–∏–Ω`,
      premium: `${USER_LIMITS.PREMIUM.VOICE_MINUTES} –º–∏–Ω/–¥–µ–Ω—å`
    },
    {
      title: '–ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π',
      description: '–ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –≤–∞—à–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ –ò–ò',
      icon: 'üì∏',
      free: USER_LIMITS.FREE.PHOTO_ANALYSES,
      premium: `${USER_LIMITS.PREMIUM.PHOTO_ANALYSES}/–¥–µ–Ω—å`
    },
    {
      title: '–ü–æ–ª–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è',
      description: '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –≥–∞–¥–∞–Ω–∏–π',
      icon: 'üìú',
      free: `${USER_LIMITS.FREE.HISTORY_DAYS} –¥–Ω–µ–π`,
      premium: '–í—Å—è –∏—Å—Ç–æ—Ä–∏—è'
    },
    {
      title: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã',
      description: '–î–æ—Å—Ç—É–ø –∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏ —Å–ª–æ–∂–Ω—ã–º —Ä–∞—Å–∫–ª–∞–¥–∞–º –¢–∞—Ä–æ',
      icon: '‚ú®',
      free: '–ë–∞–∑–æ–≤—ã–µ',
      premium: '–í—Å–µ —Ä–∞—Å–∫–ª–∞–¥—ã'
    },
    {
      title: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞',
      description: '–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à–∏ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è',
      icon: 'üéØ',
      free: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è',
      premium: '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è'
    },
    {
      title: '–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö',
      description: '–≠–∫—Å–ø–æ—Ä—Ç –≤—Å–µ—Ö –≤–∞—à–∏—Ö –≥–∞–¥–∞–Ω–∏–π –≤ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ñ–æ—Ä–º–∞—Ç–∞—Ö',
      icon: 'üì•',
      free: '–ù–µ—Ç',
      premium: '–î–æ—Å—Ç—É–ø–Ω–æ'
    }
  ];

  const testimonials = [
    {
      name: '–ê–Ω–Ω–∞ –ú.',
      text: 'MISTIKA Premium –∏–∑–º–µ–Ω–∏–ª–∞ –º–æ–π –ø–æ–¥—Ö–æ–¥ –∫ –≥–∞–¥–∞–Ω–∏—è–º. AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ —Ç–æ—á–Ω—ã!',
      rating: 5,
      avatar: 'üë©'
    },
    {
      name: '–°–µ—Ä–≥–µ–π –ö.',
      text: '–ì–æ–ª–æ—Å–æ–≤—ã–µ –≥–∞–¥–∞–Ω–∏—è - —ç—Ç–æ —Ñ–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞! –¢–∞–∫ —É–¥–æ–±–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –ø—Ä—è–º–æ –≤ –º–∏–∫—Ä–æ—Ñ–æ–Ω.',
      rating: 5,
      avatar: 'üë®'
    },
    {
      name: '–ú–∞—Ä–∏—è –õ.',
      text: '–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è –ø–æ–∑–≤–æ–ª—è—é—Ç –º–Ω–µ –≥–ª—É–±–æ–∫–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –ª—é–±—É—é —Å–∏—Ç—É–∞—Ü–∏—é. –†–µ–∫–æ–º–µ–Ω–¥—É—é!',
      rating: 5,
      avatar: 'üë©‚Äçü¶∞'
    }
  ];

  if (loading) {
    return (
      <div className="premium-page">
        <Loading text="–ó–∞–≥—Ä—É–∑–∫–∞ –ø–ª–∞–Ω–æ–≤ –ø–æ–¥–ø–∏—Å–∫–∏..." />
      </div>
    );
  }

  const isPremium = subscription?.status === 'active';

  return (
    <div className="premium-page">
      {/* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */}
      {notifications.length > 0 && (
        <div className="notifications">
          {notifications.map(notification => (
            <div
              key={notification.id}
              className={`notification notification-${notification.type}`}
            >
              {notification.message}
            </div>
          ))}
        </div>
      )}

      {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏ */}
      {isPremium && (
        <div className="subscription-status">
          <div className="status-card premium-active">
            <div className="status-icon">üëë</div>
            <div className="status-content">
              <h3>MISTIKA Premium –∞–∫—Ç–∏–≤–Ω–∞</h3>
              <p>
                –î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ: {new Date(subscription.expiresAt).toLocaleDateString('ru-RU')}
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="premium-header">
        <h1>
          {isPremium ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Premium!' : '–û—Ç–∫—Ä–æ–π—Ç–µ –≤—Å—é —Å–∏–ª—É –º–∏—Å—Ç–∏–∫–∏'}
        </h1>
        <p>
          {isPremium 
            ? '–ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –≤—Å–µ–º–∏ –ø—Ä–µ–º–∏—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ MISTIKA'
            : '–ü–æ–ª—É—á–∏—Ç–µ –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º MISTIKA'
          }
        </p>
      </div>

      {!isPremium && (
        <>
          {/* –ü–ª–∞–Ω—ã –ø–æ–¥–ø–∏—Å–∫–∏ */}
          <div className="plans-section">
            <h2>–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω</h2>
            <div className="plans-grid">
              {plans.map(plan => (
                <div 
                  key={plan.id} 
                  className={`plan-card ${plan.featured ? 'featured' : ''}`}
                >
                  {plan.featured && <div className="featured-badge">–ü–æ–ø—É–ª—è—Ä–Ω—ã–π</div>}
                  
                  <div className="plan-header">
                    <h3>{plan.name}</h3>
                    <div className="plan-price">
                      <span className="currency">‚ÇΩ</span>
                      <span className="amount">{plan.price}</span>
                      <span className="period">/{plan.period}</span>
                    </div>
                    {plan.discount > 0 && (
                      <div className="plan-discount">
                        –°–∫–∏–¥–∫–∞ {plan.discount}%
                      </div>
                    )}
                  </div>
                  
                  <div className="plan-features">
                    {plan.features.map((feature, index) => (
                      <div key={index} className="feature-item">
                        <span className="feature-icon">‚úì</span>
                        <span className="feature-text">{feature}</span>
                      </div>
                    ))}
                  </div>
                  
                  <Button
                    variant={plan.featured ? 'primary' : 'outline'}
                    size="lg"
                    className="plan-button"
                    onClick={() => handleUpgrade(plan)}
                  >
                    {plan.featured ? '–í—ã–±—Ä–∞—Ç—å –ø–ª–∞–Ω' : '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å'}
                  </Button>
                </div>
              ))}
            </div>
          </div>

          {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π */}
          <div className="features-comparison">
            <h2>–°—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π</h2>
            <div className="comparison-table">
              <div className="comparison-header">
                <div className="feature-name">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å</div>
                <div className="plan-column">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</div>
                <div className="plan-column premium">Premium</div>
              </div>
              
              {features.map((feature, index) => (
                <div key={index} className="comparison-row">
                  <div className="feature-info">
                    <div className="feature-title">
                      <span className="feature-icon">{feature.icon}</span>
                      {feature.title}
                    </div>
                    <div className="feature-description">
                      {feature.description}
                    </div>
                  </div>
                  <div className="feature-value free">
                    {feature.free === 0 ? '‚ùå' : feature.free}
                  </div>
                  <div className="feature-value premium">
                    ‚úÖ {feature.premium}
                  </div>
                </div>
              ))}
            </div>
            
            <div className="comparison-actions">
              <Button
                variant="primary"
                size="lg"
                onClick={() => setFeaturesModalOpen(true)}
              >
                –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –æ Premium
              </Button>
            </div>
          </div>
        </>
      )}

      {/* –û—Ç–∑—ã–≤—ã */}
      <div className="testimonials-section">
        <h2>–ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—à–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</h2>
        <div className="testimonials-grid">
          {testimonials.map((testimonial, index) => (
            <div key={index} className="testimonial-card">
              <div className="testimonial-header">
                <div className="testimonial-avatar">{testimonial.avatar}</div>
                <div className="testimonial-info">
                  <div className="testimonial-name">{testimonial.name}</div>
                  <div className="testimonial-rating">
                    {'‚≠ê'.repeat(testimonial.rating)}
                  </div>
                </div>
              </div>
              <div className="testimonial-text">
                "{testimonial.text}"
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* FAQ */}
      <div className="faq-section">
        <h2>–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã</h2>
        <div className="faq-list">
          <div className="faq-item">
            <h4>–ú–æ–∂–Ω–æ –ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É?</h4>
            <p>–î–∞, –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è. –î–æ—Å—Ç—É–ø –∫ Premium —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞.</p>
          </div>
          <div className="faq-item">
            <h4>–†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö?</h4>
            <p>–î–∞, Premium –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–∏–≤—è–∑–∞–Ω–∞ –∫ –≤–∞—à–µ–º—É –∞–∫–∫–∞—É–Ω—Ç—É –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö.</p>
          </div>
          <div className="faq-item">
            <h4>–ï—Å—Ç—å –ª–∏ –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥?</h4>
            <p>–î–∞, –º—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º 7-–¥–Ω–µ–≤–Ω—ã–π –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</p>
          </div>
          <div className="faq-item">
            <h4>–ë–µ–∑–æ–ø–∞—Å–Ω—ã –ª–∏ –ø–ª–∞—Ç–µ–∂–∏?</h4>
            <p>–î–∞, –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã —Å —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö.</p>
          </div>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–ø–ª–∞—Ç—ã */}
      <PaymentModal
        isOpen={paymentModalOpen}
        onClose={() => setPaymentModalOpen(false)}
        plan={selectedPlan}
        onSuccess={handlePaymentSuccess}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç—è–º–∏ */}
      <Modal
        isOpen={featuresModalOpen}
        onClose={() => setFeaturesModalOpen(false)}
        title="–í—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Premium"
        size="lg"
      >
        <div className="features-modal-content">
          <div className="features-grid">
            {features.map((feature, index) => (
              <div key={index} className="feature-card">
                <div className="feature-card-icon">{feature.icon}</div>
                <h4>{feature.title}</h4>
                <p>{feature.description}</p>
                <div className="feature-upgrade">
                  <span className="upgrade-from">–ë—ã–ª–æ: {feature.free}</span>
                  <span className="upgrade-arrow">‚Üí</span>
                  <span className="upgrade-to">–°—Ç–∞–ª–æ: {feature.premium}</span>
                </div>
              </div>
            ))}
          </div>
          <div className="features-modal-actions">
            <Button
              variant="primary"
              size="lg"
              onClick={() => {
                setFeaturesModalOpen(false);
                if (plans.length > 0) {
                  handleUpgrade(plans.find(p => p.featured) || plans[0]);
                }
              }}
            >
              –ü–æ–ª—É—á–∏—Ç—å Premium
            </Button>
          </div>
        </div>
      </Modal>
    </div>
  );
};

export default Premium;