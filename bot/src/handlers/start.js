// bot/src/handlers/start.js
const { createMainKeyboard } = require('../utils/keyboards');
const { welcomeMessage } = require('../utils/messages');

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
 */
async function handleStart(bot, msg, api, referralCode = null) {
    const chatId = msg.chat.id;
    const user = msg.from;

    try {
        // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        const userData = {
            telegram_id: user.id,
            username: user.username,
            first_name: user.first_name,
            last_name: user.last_name,
            language_code: user.language_code || 'ru',
            referral_code: referralCode
        };

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –Ω–∞ backend –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏/–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        const response = await api.post('/auth/telegram', userData);

        if (response.data.success) {
            const { user: authUser, token } = response.data;
            
            // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            const welcome = welcomeMessage(user.first_name, authUser.subscription_type);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
            await bot.sendMessage(chatId, welcome, {
                parse_mode: 'HTML',
                reply_markup: createMainKeyboard(authUser.subscription_type)
            });

            // –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            if (!authUser.total_readings || authUser.total_readings === 0) {
                await bot.sendMessage(chatId, 
                    '‚ú® <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏—Ä –º–∏—Å—Ç–∏–∫–∏!</b>\n\n' +
                    'üîÆ –ü–æ–ª—É—á–∏—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É –¥–Ω—è\n' +
                    'üì± –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞\n' +
                    'üíé –ò–∑—É—á–∏—Ç–µ –ø—Ä–µ–º–∏—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏\n\n' +
                    '<i>–ó–≤–µ–∑–¥—ã —É–∂–µ –≥–æ—Ç–æ–≤—è—Ç –¥–ª—è –≤–∞—Å –æ—Å–æ–±—ã–µ –ø–æ—Å–ª–∞–Ω–∏—è...</i>', {
                    parse_mode: 'HTML',
                    reply_markup: {
                        inline_keyboard: [
                            [
                                {
                                    text: 'üåÖ –ö–∞—Ä—Ç–∞ –¥–Ω—è',
                                    callback_data: 'daily_card'
                                },
                                {
                                    text: '‚ú® –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                                    web_app: { 
                                        url: process.env.WEBAPP_URL || 'https://mistika.app' 
                                    }
                                }
                            ]
                        ]
                    }
                });
            }

            // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ
            if (referralCode) {
                await bot.sendMessage(chatId,
                    'üéÅ <b>–í—ã –ø—Ä–∏—à–ª–∏ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é!</b>\n\n' +
                    '–ü–æ–ª—É—á–∏—Ç–µ –±–æ–Ω—É—Å—ã –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é:\n' +
                    '‚Ä¢ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è\n' +
                    '‚Ä¢ –°–∫–∏–¥–∫–∞ –Ω–∞ –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫—É\n' +
                    '‚Ä¢ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã\n\n' +
                    '<i>–ú–∞–≥–∏—è –¥—Ä—É–∂–±—ã —É–º–Ω–æ–∂–∞–µ—Ç —Å–∏–ª—É –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π!</i>', {
                    parse_mode: 'HTML'
                });
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            await bot.sendMessage(chatId, 
                'üîÆ <b>–í–æ–π–¥–∏—Ç–µ –≤ –º–∞–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç–∞–ª Mistika:</b>', {
                parse_mode: 'HTML',
                reply_markup: {
                    inline_keyboard: [[
                        {
                            text: '‚ú® –û—Ç–∫—Ä—ã—Ç—å Mistika',
                            web_app: { 
                                url: process.env.WEBAPP_URL || 'https://mistika.app' 
                            }
                        }
                    ]]
                }
            });

        } else {
            throw new Error(response.data.message || '–û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –≤ handleStart:', error);
        
        await bot.sendMessage(chatId, 
            '‚ùå <b>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ</b>\n\n' +
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.\n' +
            '–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.', {
            parse_mode: 'HTML',
            reply_markup: {
                inline_keyboard: [[
                    {
                        text: 'üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞',
                        callback_data: 'restart'
                    }
                ]]
            }
        });
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
 */
async function handleRestart(bot, callbackQuery, api) {
    const msg = callbackQuery.message;
    const user = callbackQuery.from;
    
    await bot.answerCallbackQuery(callbackQuery.id, {
        text: '–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫...'
    });
    
    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await bot.deleteMessage(msg.chat.id, msg.message_id);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
    await handleStart(bot, { 
        chat: msg.chat, 
        from: user 
    }, api);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ
 */
async function handleAbout(bot, msg) {
    const chatId = msg.chat.id;
    
    const aboutText = `
üîÆ <b>MISTIKA - –í–∞—à –ª–∏—á–Ω—ã–π –º–∏—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç–Ω–∏–∫</b>

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ üåÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã –¢–∞—Ä–æ
‚Ä¢ üé¥ –†–∞–∑–ª–∏—á–Ω—ã–µ —Ä–∞—Å–∫–ª–∞–¥—ã –∫–∞—Ä—Ç
‚Ä¢ üî¢ –ù—É–º–µ—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
‚Ä¢ üåô –õ—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –∏ —Ä–∏—Ç—É–∞–ª—ã
‚Ä¢ üéØ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
‚Ä¢ üë• –ú–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫—Ä—É–≥–∏ —Å –¥—Ä—É–∑—å—è–º–∏

<b>–ü—Ä–µ–º–∏—É–º —Ñ—É–Ω–∫—Ü–∏–∏:</b>
‚Ä¢ üé® –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫–æ–ª–æ–¥—ã –∫–∞—Ä—Ç
‚Ä¢ üîÆ –ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–µ –≥–∞–¥–∞–Ω–∏—è
‚Ä¢ ü§ñ AI –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏
‚Ä¢ üéôÔ∏è –ì–æ–ª–æ—Å–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ üì∏ –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
‚Ä¢ üíé NFT –∫–∞—Ä—Ç—ã

<b>–í–µ—Ä—Å–∏—è:</b> 2.0
<b>–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫:</b> @mistika_support

<i>–î–æ–≤–µ—Ä—å—Ç–µ—Å—å –º–∞–≥–∏–∏, –∏ –æ–Ω–∞ –æ—Ç–∫—Ä–æ–µ—Ç –≤–∞–º —Ç–∞–π–Ω—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π!</i>
    `;
    
    await bot.sendMessage(chatId, aboutText, {
        parse_mode: 'HTML',
        reply_markup: {
            inline_keyboard: [
                [
                    {
                        text: 'üíé –ü—Ä–µ–º–∏—É–º',
                        callback_data: 'premium_info'
                    },
                    {
                        text: 'üë• –ü–æ–¥–¥–µ—Ä–∂–∫–∞',
                        url: 'https://t.me/mistika_support'
                    }
                ],
                [
                    {
                        text: 'üåê –°–∞–π—Ç',
                        url: 'https://mistika.app'
                    },
                    {
                        text: 'üìö –ì–∞–π–¥',
                        callback_data: 'help_guide'
                    }
                ]
            ]
        }
    });
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–∞–π–¥–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é
 */
async function handleGuide(bot, callbackQuery) {
    const chatId = callbackQuery.message.chat.id;
    
    await bot.answerCallbackQuery(callbackQuery.id);
    
    const guideText = `
üìö <b>–ì–∞–π–¥ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é MISTIKA</b>

<b>üî• –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:</b>
1. –ù–∞–∂–º–∏—Ç–µ "üîÆ –ì–∞–¥–∞–Ω–∏–µ" –¥–ª—è –∫–∞—Ä—Ç—ã –¥–Ω—è
2. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞
3. –ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∫–∞—Ä—Ç–∞–º
4. –ü–æ–ª—É—á–∏—Ç–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é

<b>üí° –°–æ–≤–µ—Ç—ã:</b>
‚Ä¢ –§–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã —á–µ—Ç–∫–æ –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ
‚Ä¢ –õ—É—á—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è –≥–∞–¥–∞–Ω–∏—è - —É—Ç—Ä–æ–º –∏–ª–∏ –≤–µ—á–µ—Ä–æ–º
‚Ä¢ –î–æ–≤–µ—Ä—è–π—Ç–µ –ø–µ—Ä–≤–æ–º—É –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—é –æ—Ç –∫–∞—Ä—Ç
‚Ä¢ –í–µ–¥–∏—Ç–µ –¥–Ω–µ–≤–Ω–∏–∫ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π

<b>üéØ –¢–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤:</b>
‚Ä¢ –õ—é–±–æ–≤—å –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è ‚ù§Ô∏è
‚Ä¢ –ö–∞—Ä—å–µ—Ä–∞ –∏ —Ñ–∏–Ω–∞–Ω—Å—ã üíº
‚Ä¢ –ó–¥–æ—Ä–æ–≤—å–µ –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ üå±
‚Ä¢ –î—É—Ö–æ–≤–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ ‚ú®

<b>üåô –õ—É–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã:</b>
‚Ä¢ –ù–æ–≤–æ–ª—É–Ω–∏–µ - –≤—Ä–µ–º—è –Ω–∞—á–∏–Ω–∞–Ω–∏–π
‚Ä¢ –†–∞—Å—Ç—É—â–∞—è –ª—É–Ω–∞ - –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è
‚Ä¢ –ü–æ–ª–Ω–æ–ª—É–Ω–∏–µ - –ø–∏–∫ —ç–Ω–µ—Ä–≥–∏–∏ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è
‚Ä¢ –£–±—ã–≤–∞—é—â–∞—è –ª—É–Ω–∞ - –¥–ª—è –æ—á–∏—â–µ–Ω–∏—è –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è
    `;
    
    await bot.sendMessage(chatId, guideText, {
        parse_mode: 'HTML',
        reply_markup: {
            inline_keyboard: [[
                {
                    text: 'üîÆ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å',
                    web_app: { 
                        url: process.env.WEBAPP_URL || 'https://mistika.app' 
                    }
                }
            ]]
        }
    });
}

module.exports = {
    handleStart,
    handleRestart,
    handleAbout,
    handleGuide
};